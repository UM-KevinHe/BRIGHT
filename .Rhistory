rw=ind%%dinom
cl=ind%/%dinom+1
ER=BRCor[,-22]^2
ER_Exom=Val[["LAScor"]]^2
cut_Beta=c()
for(i in eta_vec[-22]){
cut_Beta=cbind(cut_Beta,out[[as.character(i)]][,rw])
}
par(mar = c(5, 5, 3, 0.5))
plot(1,type = "n",ylim = c(min(cut_Beta),max(cut_Beta)),xlim = c(min(cut_eta),max(cut_eta)),xlab = expression(eta),ylab = "Estimated effect sizes", main=paste("eta solution path (lambda=",round(Best_lambda,digits = 3),")",sep = ""), frame.plot = FALSE,cex.lab=1.5,cex.axis=1.5)
for (i in 1:p) {
if (!i%in%non_zero_pos ){
lines(cut_eta,cut_Beta[i,],ty="l",col=ggplot2::alpha("Grey",0.5),lty=1)}
}
for (i in 1:p) {
if (i%in%non_zero_pos ){
lines(cut_eta,cut_Beta[i,],ty="l",col="red",lwd=2)}
}
}else{
stop('criteria must be either "MSPE" or "R2"')
}
Sol_path_valid.plot(Val.Sum,out,highlight=(1:20)*250,criteria="MSPE")
load_all()
Sol_path_valid.plot(Val.Sum,out,highlight=(1:20)*250,criteria="MSPE")
Sol_path_valid.plot(Val.Sum,out,highlight=(1:20)*250,criteria="R2")
build_site()
load_all()
Sol_path_valid.plot <- function(Val,out,highlight=NA,criteria="R2"){
print("***")
non_zero_pos=highlight
eta_vec=Val[["eta_vec"]]
lambda=Val[["lambda"]]
dinom=dim(Val[["BRMSE_rst"]])[1]
p=dim(out[[Val[["Best_eta_MSE"]]]])[1]
m=matrix(c(1,1,2,3),nrow = 2,ncol = 2,byrow = TRUE)
layout(mat = m,heights = c(0.1,0.9))
par(mar = c(0, 0, 0, 0))
plot(1,type = "n",axes = F,xlab = "",ylab = "",frame.plot = FALSE)
legend(x="center", legend=c("Highlight markers","Other markers"),col=c("red", ggplot2::alpha("Grey",0.5)),lty=c(1,1),lwd=c(2,1),cex = c(1.5,1.5),bty = "n",horiz = T)
if(criteria=="MSPE"){
Best_lambda=Val[["Best_lambda_MSE"]]
Best_eta=Val[["Best_eta_MSE"]]
Beta=out[[Val[["Best_eta_MSE"]]]]
cut_lambda_ind=which(colSums(Beta!=0)!=0)
cut_Beta=Beta[,cut_lambda_ind]
cut_lambda=lambda[cut_lambda_ind]
par(mar = c(5, 5, 3, 0.5))
plot(1,type = "n",ylim = c(min(cut_Beta),max(cut_Beta)),xlim = c(-log(max(cut_lambda)),-log(min(cut_lambda))),xlab = expression(-log(lambda)),ylab = "Estimated effect sizes", main=paste("lambda solution path (eta=",round(Best_eta,digits = 3),")",sep = ""), frame.plot = FALSE,cex.lab=1.5,cex.axis=1.5)
for (i in 1:p) {
if (!i%in%non_zero_pos ){
lines(-log(cut_lambda),cut_Beta[i,],ty="l",col=ggplot2::alpha("Grey",0.5),lty=1)}
}
for (i in 1:p) {
if (i%in%non_zero_pos ){
lines(-log(cut_lambda),cut_Beta[i,],ty="l",col="red",lwd=2)}
}
BRCor=Val[["BRMSE_rst"]]
cut_eta=eta_vec[-22]
ind=which.min(BRCor)
rw=ind%%dinom
cl=ind%/%dinom+1
ER=BRCor[,-22]
ER_Exom=Val[["LASMSE"]]
cut_Beta=c()
for(i in eta_vec[-22]){
cut_Beta=cbind(cut_Beta,out[[as.character(i)]][,rw])
}
par(mar = c(5, 5, 3, 0.5))
plot(1,type = "n",ylim = c(min(cut_Beta),max(cut_Beta)),xlim = c(min(cut_eta),max(cut_eta)),xlab = expression(eta),ylab = "Estimated effect sizes", main=paste("eta solution path (lambda=",round(Best_lambda,digits = 3),")",sep = ""),frame.plot = FALSE,cex.lab=1.5,cex.axis=1.5)
for (i in 1:p) {
if (!i%in%non_zero_pos ){
lines(cut_eta,cut_Beta[i,],ty="l",col=ggplot2::alpha("Grey",0.5),lty=1)}
}
for (i in 1:p) {
if (i%in%non_zero_pos ){
lines(cut_eta,cut_Beta[i,],ty="l",col="red",lwd=2)}
}
}else if(criteria=="R2"){
print("***")
Best_lambda=Val[["Best_lambda_Cor"]]
Best_eta=Val[["Best_eta_Cor"]]
Beta=out[[Val[["Best_eta_Cor"]]]]
cut_lambda_ind=which(colSums(Beta!=0)!=0)
cut_Beta=Beta[,cut_lambda_ind]
cut_lambda=lambda[cut_lambda_ind]
non_zero_pos=(1:20)*250
par(mar = c(5, 5, 3, 0.5))
plot(1,type = "n",ylim = c(min(cut_Beta),max(cut_Beta)),xlim = c(-log(max(cut_lambda)),-log(min(cut_lambda))),xlab = expression(-log(lambda)),ylab = "Estimated effect sizes", main=paste("lambda solution path (eta=",round(Best_eta,digits = 3),")",sep = ""),frame.plot = FALSE,cex.lab=1.5,cex.axis=1.5)
for (i in 1:p) {
if (!i%in%non_zero_pos ){
lines(-log(cut_lambda),cut_Beta[i,],ty="l",col=ggplot2::alpha("Grey",0.5),lty=1)}
}
for (i in 1:p) {
if (i%in%non_zero_pos ){
lines(-log(cut_lambda),cut_Beta[i,],ty="l",col="red",lwd=2)}
}
BRCor=Val[["BRCor_rst"]]
cut_eta=eta_vec[-22]
ind=which.max(BRCor)
rw=ind%%dinom
cl=ind%/%dinom+1
ER=BRCor[,-22]^2
ER_Exom=Val[["LAScor"]]^2
cut_Beta=c()
for(i in eta_vec[-22]){
cut_Beta=cbind(cut_Beta,out[[as.character(i)]][,rw])
}
par(mar = c(5, 5, 3, 0.5))
plot(1,type = "n",ylim = c(min(cut_Beta),max(cut_Beta)),xlim = c(min(cut_eta),max(cut_eta)),xlab = expression(eta),ylab = "Estimated effect sizes", main=paste("eta solution path (lambda=",round(Best_lambda,digits = 3),")",sep = ""), frame.plot = FALSE,cex.lab=1.5,cex.axis=1.5)
for (i in 1:p) {
if (!i%in%non_zero_pos ){
lines(cut_eta,cut_Beta[i,],ty="l",col=ggplot2::alpha("Grey",0.5),lty=1)}
}
for (i in 1:p) {
if (i%in%non_zero_pos ){
lines(cut_eta,cut_Beta[i,],ty="l",col="red",lwd=2)}
}
}else{
stop('criteria must be either "MSPE" or "R2"')
}
}
Sol_path_valid.plot(Val.Sum,out,highlight=(1;20)*250,criteria="MSPE")
Sol_path_valid.plot(Val.Sum,out,highlight=(1:20)*250,criteria="MSPE")
build_site()
build_site()
load_all()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
library(ggplot2)
library(pheatmap)
library(gplots)
for (y in 2001:2014){
year=y:(y+4)
year_str=paste(as.character(y),as.character(y+4),sep="_")
year_mid=y+2
setwd(paste("~/Desktop/research/Alex Tsoi/Optum/2022_new/",year_str,sep = ""))
OR=read.csv("14_18_log_log_age.csv",header = T)
sig=read.csv("signicance_14_18_age.csv",header = T)
OR=OR[c(-1),]
sig=sig[c(-1),]
OR=OR[,c(-2,-(39:41))]
sig=sig[,c(-2,-(39:41))]
OR1=as.vector(as.matrix(OR[,2:37]))
sig1=as.vector(as.matrix(sig[,2:37]))
result=data.frame("OR"=OR1,"sig"=sig1,"skin"=rep(OR[,1],36),"non_skin"=rep(names(OR)[2:37],each=14))
result$sig[result$sig==-Inf]=-10000
result$sig[result$sig==-Inf]=10000
#non significant OR set to zero
result$OR[result$sig>-1]=0
result$star=cut(result$sig, breaks=c(-Inf, -3, -2, -1.3010, -1,Inf), label=c("***", "**", "*", "·", ""))
#result$star=cut(result$sig, breaks=c(-Inf, -150, -100, -50, -10,-5,-1.3,Inf), label=c("***", "**", "*", "···", "··","·",""))
result <- within(result, non_skin <- factor(non_skin, levels=c("Diabetes.Mellitus.Non.Insulin.Dependent","Diabetes.Mellitus.Insulin.Dependent","Hypercholesterolemia","Hypertriglyceridemia","Increased.systolic.arterial.pressure","Sudden.Cardiac.Arrest","Venous.Thromboembolism","Ulcerative.Colitis..IBD.","Crohns.disease..IBD.","Celiac.Disease","Rheumatoid.Arthritis","Multiple.sclerosis","Alzheimers.disease","Parkinsons.disease","Bipolar.Disorder","Nasopharyngeal.carcinoma","Malignant.neoplasm.of.prostate","Malignant.neoplasm.of.pancreas","Malignant.neoplasm.of.ovary","Malignant.neoplasm.of.lungs","Malignant.neoplasm.of.breast","Chronic.Lymphocytic.Leukemia","Chronic.Obstructive.Airway.Disease","Asthma","Ankylosing.spondylitis","Systemic.Scleroderma","Primary.biliary.cirrhosis","Hepatitis","Obesity","Myopia","Motion.Sickness","Menopause","Menarche","Leprosy","Hypothyroidism","Hyperthyroidism","Age.related.macular.degeneration")))
rm=c("Ankylosing.spondylitis","Systemic.Scleroderma","Rheumatoid.Arthritis")
result=result[!result$non_skin%in%rm,]
setwd("~/Desktop/research/Alex Tsoi/Optum/2022_new/all_disease/")
pdf(file=paste(year_str,"_all_disease.pdf",sep=""),width = 10,height = 10)
plot=ggplot(aes(x=skin, y=non_skin, fill=OR), data=result)+
geom_tile() + scale_fill_gradient2(low="red", mid="white", high="darkblue") +
geom_text(aes(label=star), color="black", size=5)+
theme_bw()+
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=1))
print(plot)
dev.off()
pdf(file=paste(year_str,"_all_disease_pheatmap.pdf",sep=""),width = 10,height = 10)
color_palette <- bluered(100)
Sig2=as.matrix(sig[,-1])
Sig2[Sig2==-Inf]=-10000
Sig2[Sig2==Inf]=10000
rownames(Sig2)=sig[,1]
OR2=as.matrix(OR[,-1])
rownames(OR2)=c("PN","Rosacea","AD","PsA","Psoriasis","Alopecia areata","Vitiligo","SLE","Acne","Aging","Melanoma","Pigmentation","Leprosy","HS")
OR2[Sig2>-1]=0
label=cut(Sig2, breaks=c(-Inf, -3, -2, -1.3010, -1,Inf), label=c("***", "**", "*", "·", ""))
dim(label)=dim(OR2)
OR2=OR2[,-c(23,24,25)]
label=label[,-c(23,24,25)]
ind=!colnames(OR2)%in%rm
OR2=OR2[,ind]
label=label[,ind]
colann=data.frame(Skin_type=c("Immune_Skin","Immune_Skin","Immune_Skin","Skin_related","Immune_Skin","Immune_Skin","Immune_Skin","Skin_related","Immune_Skin","Non_Immune_Skin","Non_Immune_Skin","Non_Immune_Skin","Non_Immune_Skin","Immune_Skin"))
rownames(colann)=c("PN","Rosacea","AD","PsA","Psoriasis","Alopecia areata","Vitiligo","SLE","Acne","Aging","Melanoma","Pigmentation","Leprosy","HS")
rowann=data.frame(Comorbidity_type=c("Eye","Mental","Immune","Respiratory","Mental","Gastrointestinal","Cancer","Respiratory","Gastrointestinal","Diabetes","Diabetes","Liver","Cardiovascular","Endocrine","Cardiovascular","Endocrine","Cardiovascular","Cancer","Cancer","Cancer","Cancer","Cancer","Immune","Eye","Cancer","Other","Mental","Liver","Immune","Cardiovascular","Immune","Gastrointestinal","Cardiovascular")[ind])
rownames(rowann)=colnames(OR2)
pheatmap(t(OR2),color = color_palette,breaks =c(seq(from=min(OR2),to=0.00001,length.out = 50),seq(from=0,to=max(OR2),length.out = 50)),display_numbers = t(label),annotation_col=colann,annotation_row = rowann)
dev.off()
}
library(ggplot2)
library(data.table)
library(metafor)
library(meta)
setwd("~/Desktop/research/Alex Tsoi/Optum/2022_new/")
Disease=read.table("~/Desktop/research/Alex Tsoi/Optum/2022/Disease_name.txt",header=F,sep="^")
Disease=as.vector(Disease$V1)
Skin=c("PN_narrow","PN_broad","Rosacea","Dermatitis atopic","Psoriatic arthropathy","Psoriasis","Alopecia areata","Vitiligo","Lupus Erythematosus Systemic","Acne","Aging","Melanoma","Pigmentation","Leprosy","HS")
non_Skin=Disease[which(!Disease%in%Skin)]
i="Psoriatic arthropathy"
j="Rheumatoid Arthritis"
data=c()
for (y in 2001:2014){
year=y:(y+4)
year_str=paste(as.character(y),as.character(y+4),sep="_")
year_mid=y+2
year_end=y+4
setwd(paste("~/Desktop/research/Alex Tsoi/Optum/2022_new/",year_str,"/summary",sep = ""))
summ=read.table(paste(year_end,i,j,"summary.txt",sep = "_"),header = F,skip =11,nrows = 26,fill = T)[,1:4]
data=rbind(data,c(year_mid,summ[2,2],summ[2,3]))
}
setwd("~/Desktop/research/Alex Tsoi/Optum/2022_new/Comorbidity/")
data=as.data.frame(data)
colnames(data)=c("year","estimate","SD")
data$estimate=as.character(data$estimate)
data$SD=as.character(data$SD)
data$estimate=as.numeric(data$estimate)
data$SD=as.numeric(data$SD)
data$OR=exp(data$estimate)
data$lower_OR=exp(data$estimate-1.96*data$SD)
data$upper_OR=exp(data$estimate+1.96*data$SD)
data$upper_OR[data$upper_OR==Inf]=10000
data$year=paste(as.character(2001:2014),"-",as.character(2005:2018))
data=data[,c(1,4,5,6)]
data_all=data
setwd("~/Desktop/research/Alex Tsoi/Optum/Rheumatology_Clinic/summary2/")
data=c()
for (y in 2001:2014){
year=y:(y+4)
year_str=paste(as.character(y),as.character(y+4),sep="_")
year_mid=y+2
year_end=y+4
summ=read.table(paste(year_end,i,j,"summary.txt",sep = "_"),header = F,skip =11,nrows = 26,fill = T)[,1:4]
data=rbind(data,c(year_mid,summ[2,2],summ[2,3]))
}
data=as.data.frame(data)
colnames(data)=c("year","estimate","SD")
data$estimate=as.character(data$estimate)
data$SD=as.character(data$SD)
data$estimate=as.numeric(data$estimate)
data$SD=as.numeric(data$SD)
data$OR=exp(data$estimate)
data$lower_OR=exp(data$estimate-1.96*data$SD)
data$upper_OR=exp(data$estimate+1.96*data$SD)
data$upper_OR[data$upper_OR==Inf]=10000
data=data[,c(1,4,5,6)]
data$year=paste(as.character(2001:2014),"-",as.character(2005:2018))
x=1:14
x2=(1:14)^2
model1=lm(data_all$OR~x+x2)
model2=lm(data$OR~x+x2)
summary(model1)
summary(model2)
plot(1:14,data_all$OR,pch=16,ylim = c(10,52),ylab = "OR")
points(1:14,data$OR,pch=17)
xc=(10:140)/10
lines(xc,53.420298-2.673481*xc+0.007784*xc^2,ty="l")
lines(xc,38.589684-3.162080*xc+0.083038*xc^2,ty="l")
plot(1:14,data_all$OR,pch=16,ylim = c(10,52),ylab = "OR")
library(devtools)
library(pkgdown)
build_site()
library(devtools)
library(pkgdown)
build_site()
build_site()
library(BRIGHT)
load_all()
library(BRIGHT)
load("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/dat.RData")
load("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/out.RData")
Sol_path.plot(out,highlight=(1:20)*250,eta.plot=out[["eta_vec"]][1],lambda.plot=out[["lambda"]][1])
out[["eta_vec"]][1]
out[["lambda"]][1]
Sol_path.plot(out,highlight=Ground_truth,eta.plot=0,lambda.plot=0.3525904)
Ground_truth=(1:20)*250
Ground_truth=(1:20)*250
Sol_path.plot(out,highlight=Ground_truth,eta.plot=0,lambda.plot=0.3525904)
Ground_truth
Sol_path.plot(out,highlight=Ground_truth,eta.plot=NA,lambda.plot=0.3525904)
Sol_path.plot(out,highlight=Ground_truth,eta.plot=0,lambda.plot=NA)
out[["lambda"]]
Sol_path.plot(out,highlight=Ground_truth,eta.plot=0,lambda.plot=0.3525904139)
which(lambda==0.3525904139)
which(out[["lambda"]]==0.3525904139)
out[["lambda"]]-0.3525904139
out[["lambda"]][1]-0.3525904139
load_all()
Sol_path.plot(out,highlight=Ground_truth,eta.plot=0,lambda.plot=0.3525904139)
non_zero_pos=highlight
eta_vec=out[["eta_vec"]]
lambda=out[["lambda"]]
p=dim(out[["0"]])[1]
which((lambda-lambda.plot)<1e-5)
lambda.plot=0.3525904139
which((lambda-lambda.plot)<1e-5)
(lambda-lambda.plot)
which(abs(lambda-lambda.plot)<1e-5)
which(abs(lambda-lambda.plot)<1e-5)[1]
load_all()
Sol_path.plot(out,highlight=Ground_truth,eta.plot=0,lambda.plot=0.3525904139)
Sol_path.plot(out,highlight=Ground_truth,eta.plot=0,lambda.plot=0.353)
which.min(abs(lambda-lambda.plot))[1]
load_all()
Sol_path.plot(out,highlight=Ground_truth,eta.plot=0,lambda.plot=0.353)
build_site()
build_site()
Val
# Perform validation with individual-level validation data
Val <- Valid.Ind(out, Valipheno, Valigeno)
Valigeno <- "~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/SAS2"
Valipheno <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/SAS2_phe.fam")
Val <- Valid.Ind(out, Valipheno, Valigeno)
load()
load_all()
Testgeno <- "~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/SAS2"
Testpheno <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/SAS2_phe_test.fam")
# Perform validation with individual-level validation data
Tst <- Test.Ind(Val, Testpheno, Testgeno)
Density.plot(Tst,Pct=0.9,criteria = "R2")
ROC.plot(Tst,Pct=0.9,criteria = "R2")
XB_BRIGHT=Tst[["XB_Cor"]]
XB_BRIGHT
dim(Val[["Beta_Cor"]])
dim(Val[["Beta_MSE"]])
rst[["Best_eta_Cor"]]
Val[["Best_eta_Cor"]]
which(Val[["eta_vec"]]==Val[["Best_eta_Cor"]])
load()
load_all()
Val <- Valid.Ind(out, Valipheno, Valigeno)
load_all()
Tst <- Test.Ind(Val, Testpheno, Testgeno)
Density.plot(Tst,Pct=0.9,criteria = "R2")
Density.plot(Tst,Pct=0.5,criteria = "R2")
Density.plot(Tst,Pct=0.75,criteria = "R2")
Density.plot(Tst,Pct=0.2,criteria = "R2")
Density.plot(Tst,Pct=0.1,criteria = "R2")
Density.plot(Tst,Pct=0.5,criteria = "MSPE")
Density.plot(Tst,Pct=0.9,criteria = "MSPE")
Density.plot(Tst,Pct=0.95,criteria = "MSPE")
# Plot density plot
Density.plot(Tst,Pct=0.95,criteria = "R2")
Testgeno <- "~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/SAS2"
Testpheno <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/SAS2_phe.fam")
Tst <- Test.Ind(Val, Testpheno, Testgeno)
Density.plot(Tst,Pct=0.9,criteria = "R2")
ROC.plot(Tst,Pct=0.9,criteria = "R2")
ROC.plot(Tst,Pct=0.9,criteria = "R2")
build_site()
library(ggplot2)
beta_cor=0.7
setwd("/Users/qinmenggeli/Desktop/research/Kevin He/PRS/BRIGHT_Simulation/Fix_length/")
for (j in c(0.001)){
for (k in c(0.5)){
folder_nm=paste(j,"_",k,"_",beta_cor,sep="")
N=length(list.files(folder_nm,pattern = "rst*"))
filelist=list.files(folder_nm,pattern = "rst*")
h=0
ER_rst=rep(0,21)
ER_Exom_rst=0
ER_cum=c()
ER_Exom_cum=c()
for (i in filelist) {
print(i)
h=h+1
load(paste(folder_nm,"/",i,sep=""))
ER=ER[,-22]
eta_vec=eta_vec[-22]
cl=which.min(ER)%/%40
rw=which.min(ER)%%40
if(rw==0){rw=40}
ER_rst=ER_rst+ER[rw,]
ER_Exom_rst=ER_Exom_rst+ER_Exom[which.min(AIC_Exom)]
ER_cum=cbind(ER_cum,ER[rw,])
}
ER_rst=ER_rst/length(filelist)
ER_Exom_rst=ER_Exom_rst/length(filelist)
sd=sqrt(rowMeans((ER_cum-ER_rst)^2))
upper=ER_rst+1.96*sd
lower=ER_rst-1.96*sd
pdf(paste(j,"_",k,"_",beta_cor,"_ER_avg.pdf",sep = ""),width = 5,height = 5)
par(mar = c(4, 4, 0.5, 0.5))
#plot(1,type = "n",ylim = c(min(ER_rst),max(ER_rst,ER_Exom_rst)+20),xlim = c(min(eta_vec),max(eta_vec)),xlab = expression(eta),ylab = "Empirical Risk",frame.plot = FALSE,cex.lab=1,cex.axis=1)
plot(1,type = "n",ylim = c(min(ER_rst),max(ER_rst,ER_Exom_rst)+20),xlim = c(min(eta_vec),max(eta_vec)),xlab = expression(eta),ylab = "Empirical Risk",frame.plot = FALSE,cex.lab=1,cex.axis=1)
#polygon(x = c(eta_vec,eta_vec[21:1]),
#        y = c(lower,upper[21:1]),
#        col = "grey",border = NA)
lines(eta_vec,ER_rst,lwd=3)
points(eta_vec[1],ER_rst[1],pch=15,cex=2)
points(eta_vec[21],ER_Exom_rst,pch=17,cex=2)
dev.off()
}
}
library(devtools)
build_site()
load_all()
build_site()
library(pkgdown)
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
library(devtools)
library(roxygen2)
build_site()
libarar
library(roxygen2)
library(devtools)
build_site()
load_all()
library(roxygen2)
build_site()
library(roxygen2)
roxygen2::build_site
library(pkgdown)
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
library(ggplot2)
setwd("/Users/qinmenggeli/Desktop/research/Kevin He/PRS/BRIGHT_bioinfo_simulation/")
time=rep(0,20)
dim(time)=c(10,2)
mem=rep(0,20)
dim(mem)=c(10,2)
cor1=c()
cor2=c()
for (i in 1:10) {
print(i)
load(paste(i*100,"_rst.RData",sep=""))
time[i,1]=mean(time1)
time[i,2]=mean(time2)
mem[i,1]=mean(mem1)
mem[i,2]=mean(mem2)
cor1=cbind(cor1,BR[1:10])
cor2=cbind(cor2,LAS[1:10])
}
Cor=c(as.vector(cor1),as.vector(cor2))
Method=c(rep("KL",100),rep("LASSOsum",100))
Samplesize=factor(as.character(c(rep((1:10)*100,each=10),rep((1:10)*100,each=10))),levels = as.character((1:10)*100))
Plot=data.frame(Cor=Cor^2,Method=Method,Samplesize=Samplesize)
pdf("KL_LAS_Performance.pdf",width = 5,height = 5)
ggplot(Plot, aes(x=Samplesize, y=Cor, fill=Method)) +
geom_boxplot()+
labs(y="R2",x="Sample Size")+
theme_bw()+
theme(legend.title = element_blank())
dev.off()
library(ggplot2)
setwd("/Users/qinmenggeli/Desktop/research/Kevin He/PRS/BRIGHT_bioinfo_simulation/")
time=rep(0,20)
dim(time)=c(10,2)
mem=rep(0,20)
dim(mem)=c(10,2)
cor1=c()
cor2=c()
for (i in 1:10) {
print(i)
load(paste(i*100,"_rst.RData",sep=""))
time[i,1]=mean(time1)
time[i,2]=mean(time2)
mem[i,1]=mean(mem1)
mem[i,2]=mean(mem2)
cor1=cbind(cor1,BR[1:10])
cor2=cbind(cor2,LAS[1:10])
}
Cor=c(as.vector(cor1),as.vector(cor2))
Method=c(rep("KL",100),rep("LASSOsum",100))
Samplesize=factor(as.character(c(rep((1:10)*100,each=10),rep((1:10)*100,each=10))),levels = as.character((1:10)*100))
Plot=data.frame(Cor=Cor^2,Method=Method,Samplesize=Samplesize)
pdf("KL_LAS_Performance.pdf",width = 5,height = 5)
ggplot(Plot, aes(x=Samplesize, y=Cor, fill=Method)) +
geom_boxplot()+
labs(y="R2",x="Sample Size")+
theme_bw()+
theme(legend.title = element_blank())
dev.off()
build_site()
library(devtools)
library(pkgdown)
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
build_site()
