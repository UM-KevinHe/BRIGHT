p=ncol(gene_bed)
if(is.na(group)[1]){
group=1:p
}
if(is.null(data$Pss$Coef)){
warning("dat$Pss$Coef not found avoiding the usage of prior data")
Beta_prior=rep(0,p)
eta=0
}else{
Beta_prior=data$Pss$Coef
}
eta
Yhat=gene_bed%*%Beta_prior
head(Yhat)
KG=data$KG
gene_bed = BEDMatrix(data$LD_dir)
gene_bed=as.matrix(gene_bed)
Y=data$Tpheno[,3]
p=ncol(gene_bed)
if(is.na(group)[1]){
group=1:p
}
if(is.null(data$Pss$Coef)){
warning("dat$Pss$Coef not found avoiding the usage of prior data")
Beta_prior=rep(0,p)
eta=0
}else{
Beta_prior=data$Pss$Coef
}
family="gaussian"
yy <- newY(Y, family)
sd(yy)
sd(Y)
mean(Y)
mean(yy)
KG=data$KG
gene_bed = BEDMatrix(data$LD_dir)
gene_bed=as.matrix(gene_bed)
Y=data$Tpheno[,3]
p=ncol(gene_bed)
if(is.na(group)[1]){
group=1:p
}
if(is.na(sum(m))){
m=sqrt(table(group[group!=0]))
}
if(is.null(data$Pss$Coef)){
warning("dat$Pss$Coef not found avoiding the usage of prior data")
Beta_prior=rep(0,p)
eta=0
}else{
Beta_prior=data$Pss$Coef
}
Yhat=gene_bed%*%Beta_prior
yy <- newY(Y, family)
XG <- newXG(gene_bed, group, m)
m
if(is.na(sum(m))){
m=sqrt(table(group[group!=0]))
}
m=NA
if(is.na(sum(m))){
m=sqrt(table(group[group!=0]))
}
yy <- newY(Y, family)
XG <- newXG(gene_bed, group, m)
attr(yy, 'm')
penalty="grLASSO"
bilevel <- strtrim(penalty, 2) != "gr"
penalty="grLasso"
bilevel <- strtrim(penalty, 2) != "gr"
bilevel
yy <- newY(Y, family)
XG <- newXG(gene_bed, group, m, attr(yy, 'm'), bilevel)
lambda <- setupLambda(XG$X, Y, XG$g, family, penalty, alpha, lambda.min, log.lambda, nlambda, XG$m)
load_all()
lambda <- setupLambda(XG$X, Y, XG$g, family, penalty, alpha, lambda.min, log.lambda, nlambda, XG$m)
family
alpha=0
lambda.min=0.001
log.lambda=T
nlambda=100
lambda <- setupLambda(XG$X, Y, XG$g, family, penalty, alpha, lambda.min, log.lambda, nlambda, XG$m)
KG=data$KG
gene_bed = BEDMatrix(data$LD_dir)
gene_bed=as.matrix(gene_bed)
Y=data$Tpheno[,3]
p=ncol(gene_bed)
if(is.na(group)[1]){
group=1:p
}
if(is.na(sum(m))){
m=sqrt(table(group[group!=0]))
}
if(is.null(data$Pss$Coef)){
warning("dat$Pss$Coef not found avoiding the usage of prior data")
Beta_prior=rep(0,p)
eta=0
}else{
Beta_prior=data$Pss$Coef
}
Yhat=gene_bed%*%Beta_prior
bilevel <- strtrim(penalty, 2) != "gr"
yy <- newY(Y, family)
XG <- newXG(gene_bed, group, m, attr(yy, 'm'), bilevel)
lambda <- setupLambda(XG$X, Y, XG$g, family, penalty, alpha, lambda.min, log.lambda, nlambda, XG$m)
rst_BRIGHTi=grpreg(X=gene_bed,y=Y,group=group,penalty = penalty,family = family,lambda = lambda,lambda.min = lambda.min,alpha=alpha,eps=eps,max.iter = max_iter,dfmax = dfmax,gmax = gmax,tau = tau,gamma = gamma)
library(grpreg)
rst_BRIGHTi=grpreg(X=gene_bed,y=Y,group=group,penalty = penalty,family = family,lambda = lambda,lambda.min = lambda.min,alpha=alpha,eps=eps,max.iter = max_iter,dfmax = dfmax,gmax = gmax,tau = tau,gamma = gamma)
gamma
gamma=0
gamma=ifelse(penalty == "grSCAD", 4, 3)
gamma
rst_BRIGHTi=grpreg(X=gene_bed,y=Y,group=group,penalty = penalty,family = family,lambda = lambda,lambda.min = lambda.min,alpha=alpha,eps=eps,max.iter = max_iter,dfmax = dfmax,gmax = gmax,tau = tau,gamma = gamma)
alpha
alpha=0.0001
rst_BRIGHTi=grpreg(X=gene_bed,y=Y,group=group,penalty = penalty,family = family,lambda = lambda,lambda.min = lambda.min,alpha=alpha,eps=eps,max.iter = max_iter,dfmax = dfmax,gmax = gmax,tau = tau,gamma = gamma)
rst_BRIGHTi=grpreg(X=gene_bed,y=Y,group=group,penalty = penalty,family = family,lambda.min = lambda.min,alpha=alpha,eps=eps,max.iter = max_iter,dfmax = dfmax,gmax = gmax,tau = tau,gamma = gamma)
eps=0.000001
rst_BRIGHTi=grpreg(X=gene_bed,y=Y,group=group,penalty = penalty,family = family,lambda.min = lambda.min,alpha=alpha,eps=eps,max.iter = max_iter,dfmax = dfmax,gmax = gmax,tau = tau,gamma = gamma)
max_iter=10000
rst_BRIGHTi=grpreg(X=gene_bed,y=Y,group=group,penalty = penalty,family = family,lambda.min = lambda.min,alpha=alpha,eps=eps,max.iter = max_iter,dfmax = dfmax,gmax = gmax,tau = tau,gamma = gamma)
dfmax=5000
rst_BRIGHTi=grpreg(X=gene_bed,y=Y,group=group,penalty = penalty,family = family,lambda.min = lambda.min,alpha=alpha,eps=eps,max.iter = max_iter,dfmax = dfmax,gmax = gmax,tau = tau,gamma = gamma)
gmax=5000
tau
tau=1/3
rst_BRIGHTi=grpreg(X=gene_bed,y=Y,group=group,penalty = penalty,family = family,lambda.min = lambda.min,alpha=alpha,eps=eps,max.iter = max_iter,dfmax = dfmax,gmax = gmax,tau = tau,gamma = gamma)
rst_BRIGHTi$lambda
colSums(rst_BRIGHTi$beta!=0)
rst_BRIGHTi=grpreg(X=gene_bed,y=Y,group=group,penalty = penalty,family = family,alpha=alpha,eps=eps,max.iter = max_iter,dfmax = dfmax,gmax = gmax,tau = tau,gamma = gamma)
colSums(rst_BRIGHTi$beta!=0)
family
penalty
lambda.min
rst_BRIGHTi$lambda
eps
rst_BRIGHTi=grpreg(X=gene_bed,y=Y,group=group,min.lambda=0.0001,penalty = penalty,family = family,alpha=alpha,eps=eps,max.iter = max_iter,dfmax = dfmax,gmax = gmax,tau = tau,gamma = gamma)
colSums(rst_BRIGHTi$beta!=0)
seq(from=1,to=5,10)
seq(from=1,to=5,length.out=10)
rst_BRIGHTi=grpreg(X=gene_bed,y=Y,group=group,lambda=exp(seq(from=0.5,to=0.0001,length.out=10)),penalty = penalty,family = family,alpha=alpha,eps=eps,max.iter = max_iter,dfmax = dfmax,gmax = gmax,tau = tau,gamma = gamma)
colSums(rst_BRIGHTi$beta!=0)
exp(seq(from=0.5,to=0.0001,length.out=10))
rst_BRIGHTi=grpreg(X=gene_bed,y=Y,group=group,lambda=exp(seq(from=log(0.5),to=log(0.0001),length.out=10)),penalty = penalty,family = family,alpha=alpha,eps=eps,max.iter = max_iter,dfmax = dfmax,gmax = gmax,tau = tau,gamma = gamma)
colSums(rst_BRIGHTi$beta!=0)
exp(seq(from=0.5,to=0.0001,length.out=10))
log(0.5)
exp(seq(from=log(0.5),to=log(0.0001),length.out=10))
rst_BRIGHTi=grpreg(X=gene_bed,y=Y,group=group,lambda=exp(seq(from=log(0.5),to=log(0.01),length.out=10)),penalty = penalty,family = family,alpha=alpha,eps=eps,max.iter = max_iter,dfmax = dfmax,gmax = gmax,tau = tau,gamma = gamma)
exp(seq(from=log(0.5),to=log(0.0001),length.out=10))
colSums(rst_BRIGHTi$beta!=0)
rst_BRIGHTi=grpreg(X=gene_bed,y=Y,group=group,lambda=exp(seq(from=log(1),to=log(0.01),length.out=10)),penalty = penalty,family = family,alpha=alpha,eps=eps,max.iter = max_iter,dfmax = dfmax,gmax = gmax,tau = tau,gamma = gamma)
colSums(rst_BRIGHTi$beta!=0)
rst_BRIGHTi=grpreg(X=gene_bed,y=Y,group=group,lambda=exp(seq(from=log(1.5),to=log(0.01),length.out=10)),penalty = penalty,family = family,alpha=alpha,eps=eps,max.iter = max_iter,dfmax = dfmax,gmax = gmax,tau = tau,gamma = gamma)
colSums(rst_BRIGHTi$beta!=0)
md=lm(yy~XG$X[,1])
summary(md)
cor(yy,XG$X[,1])
cor(yy,XG$X[,1])/var(XG$X[,1])
cor(yy,XG$X[,1])/var(yy)
cor(yy,XG$X[,1])/sd(yy)
cov(yy,XG$X[,1])/var(XG$X[,1])
cov(yy,XG$X)/var(XG$X)
rowMeans((XG$X-rowMeans(XG$X))^2)
colMeans((XG$X-colMeans(XG$X))^2)
cov(yy,XG$X)
cov(yy,XG$X[,1])
cov(yy,XG$X[,2])
cov(yy,XG$X[,5])
cov(yy,XG$X)
cov(yy,XG$X)[,1]
cov(yy,XG$X)[,2]
cov(yy,XG$X)[,3]
cov(yy,XG$X)[3]
cov(yy,XG$X)[100]
a=as.vector(cov(yy,XG$X))
a
max(a)
max(as.vector(cov(yy,XG$X)))
lambda.min
KG=data$KG
gene_bed = BEDMatrix(data$LD_dir)
gene_bed=as.matrix(gene_bed)
Y=data$Tpheno[,3]
p=ncol(gene_bed)
if(is.na(group)[1]){
group=1:p
}
if(is.na(sum(m))){
m=sqrt(table(group[group!=0]))
}
if(is.null(data$Pss$Coef)){
warning("dat$Pss$Coef not found avoiding the usage of prior data")
Beta_prior=rep(0,p)
eta=0
}else{
Beta_prior=data$Pss$Coef
}
Yhat=gene_bed%*%Beta_prior
bilevel <- strtrim(penalty, 2) != "gr"
yy <- newY(Y, family)
XG <- newXG(gene_bed, group, m, attr(yy, 'm'), bilevel)
lambda <- exp(seq(from=log(max(as.vector(cov(yy,XG$X)))),to=log(lambda.min),length.out=10))
rst_BRIGHTi=grpreg(X=gene_bed,y=Y,group=group,lambda=,penalty = penalty,family = family,alpha=alpha,eps=eps,max.iter = max_iter,dfmax = dfmax,gmax = gmax,tau = tau,gamma = gamma)
eta
for(eta in eta_vec){
Ytilde=(Y+eta*Yhat)/(1+eta)
rst_BRIGHTi=grpreg(X=gene_bed,y=Ytilde,group=group,penalty = penalty,family = family,lambda = lambda,alpha=alpha,eps=eps,max.iter = max_iter,dfmax = dfmax,gmax = gmax,tau = tau,gamma = gamma)
out[[as.character(eta)]]=rst_BRIGHTi$beta
}
eta_vec=eta
out=list()
out[["lambda"]]=lambda
out[["eta_vec"]]=eta_vec
for(eta in eta_vec){
Ytilde=(Y+eta*Yhat)/(1+eta)
rst_BRIGHTi=grpreg(X=gene_bed,y=Ytilde,group=group,penalty = penalty,family = family,lambda = lambda,alpha=alpha,eps=eps,max.iter = max_iter,dfmax = dfmax,gmax = gmax,tau = tau,gamma = gamma)
out[[as.character(eta)]]=rst_BRIGHTi$beta
}
colSums(rst_BRIGHTi$beta!=0)
lambda.min=0.1
lambda.min=0.01
for(eta in eta_vec){
Ytilde=(Y+eta*Yhat)/(1+eta)
rst_BRIGHTi=grpreg(X=gene_bed,y=Ytilde,group=group,penalty = penalty,family = family,lambda = lambda,alpha=alpha,eps=eps,max.iter = max_iter,dfmax = dfmax,gmax = gmax,tau = tau,gamma = gamma)
out[[as.character(eta)]]=rst_BRIGHTi$beta
}
colSums(rst_BRIGHTi$beta!=0)
bilevel <- strtrim(penalty, 2) != "gr"
yy <- newY(Y, family)
XG <- newXG(gene_bed, group, m, attr(yy, 'm'), bilevel)
lambda <- exp(seq(from=log(max(as.vector(cov(yy,XG$X)))),to=log(lambda.min),length.out=10))
eta_vec=eta
out=list()
out[["lambda"]]=lambda
out[["eta_vec"]]=eta_vec
for(eta in eta_vec){
Ytilde=(Y+eta*Yhat)/(1+eta)
rst_BRIGHTi=grpreg(X=gene_bed,y=Ytilde,group=group,penalty = penalty,family = family,lambda = lambda,alpha=alpha,eps=eps,max.iter = max_iter,dfmax = dfmax,gmax = gmax,tau = tau,gamma = gamma)
out[[as.character(eta)]]=rst_BRIGHTi$beta
}
setwd("/Users/qinmenggeli/Desktop/research/Kevin He/PRS/Real data/BP")
pdf("eta_MSE_cor.pdf",width = 10,height = 5)
m=matrix(c(1,1,2,3),nrow = 2,ncol = 2,byrow = TRUE)
layout(mat = m,heights = c(0.1,0.9,0.9))
par(mar = c(0, 0, 0, 0))
plot(1,type = "n",axes = F,xlab = "",ylab = "",frame.plot = FALSE)
legend(x="center", legend=c(expression(paste("B-",eta)),"B-AIC","B-MSE","B-R2","AFR Dia","AFR Sys"),col=c("black", "#56B4E9", "#E69F00", "#009E73", "black","black"),lty=c(1,NA,NA,NA,NA,NA),lwd=c(5,NA,NA,NA,NA,NA),pch = c(NA,16,16,16,15,17),cex = c(1.5,1.5,1.5,1.5,1.5,1.5),pt.cex=c(NA,3,3,3,3,3),bty = "n",horiz = T)
load("MGIAFRDiaNon_MGIAFRSysNon2.RData")
eta=eta_vec
AIC=AIC_rst
Cor_eval=LAScor_eval_rst
Cor_vali=LAScor_rst
MSE_eval=MSE_eval_rst
MSE_vali=MSE_rst
load("MGIAFRDiaNon_MGIAFRSysNon3.RData")
eta=c(eta,eta_vec)
AIC=cbind(AIC,AIC_rst)
Cor_eval=cbind(Cor_eval,LAScor_eval_rst)
Cor_vali=cbind(Cor_vali,LAScor_rst)
MSE_eval=cbind(MSE_eval,MSE_eval_rst)
MSE_vali=cbind(MSE_vali,MSE_rst)
load("MGIAFRDiaNon_MGIAFRSysNon4.RData")
eta=c(eta,eta_vec)
AIC=cbind(AIC,AIC_rst)
Cor_eval=cbind(Cor_eval,LAScor_eval_rst)
Cor_vali=cbind(Cor_vali,LAScor_rst)
MSE_eval=cbind(MSE_eval,MSE_eval_rst)
MSE_vali=cbind(MSE_vali,MSE_rst)
#BRCor=MSE_vali
#ind=which.min(BRCor)
#ind=which.max(LAScor_eval_rst)
#rw=ind%%40
#cl=ind%/%40+1
#ER=BRCor
#ER_Exom=MSE_vali_prior
#eta=eta
#ER=ER
ER_Exom=MSE_vali_prior
ind1=which.min(MSE_eval)
rw1=ind1%%40
cl1=ind1%/%40+1
ind2=which.min(AIC)
rw2=ind2%%40
cl2=ind2%/%40+1
ind3=which.max(Cor_eval)
rw3=ind3%%40
cl3=ind3%/%40+1
cmin=c()
for(i in 1:ncol(MSE_vali)){
cmin=c(cmin,min(MSE_vali[,i]))
}
par(mar = c(5, 5, 0.5, 0.5))
plot(1,type = "n",ylim = c(min(cmin),max(cmin,ER_Exom[which.min(ER_Exom)])),xlim = c(min(eta),max(eta)),xlab = expression(eta),ylab = "MSPE",cex.lab=2,cex.axis=2,frame.plot=F)
box(bty="l")
lines(eta,cmin,lwd=5)
points(eta[cl1],cmin[cl1],pch=16,cex=3,col="#E69F00")
points(eta[cl2],cmin[cl2],pch=16,cex=3,col="#56B4E9")
points(eta[cl3],cmin[cl3],pch=16,cex=3,col="#009E73")
points(eta[1],cmin[1],pch=15,cex=3)
points(eta[length(eta)],ER_Exom[which.min(ER_Exom)],pch=17,cex=3)
ER_Exom=LAScor_vali_prior
cmin=c()
for(i in 1:ncol(Cor_vali)){
cmin=c(cmin,max(Cor_vali[,i],na.rm = T))
}
ER_Exom=ER_Exom^2
cmin=cmin^2
par(mar = c(5, 5, 0.5, 0.5))
plot(1,type = "n",ylim = c(min(cmin,ER_Exom[which.max(ER_Exom)]),max(cmin)),xlim = c(min(eta),max(eta)),xlab = expression(eta),ylab = "R2",cex.lab=2,cex.axis=2,frame.plot=F)
box(bty="l")
lines(eta,cmin,lwd=5)
points(eta[cl1],cmin[cl1],pch=16,cex=3,col="#E69F00")
points(eta[cl2],cmin[cl2],pch=16,cex=3,col="#56B4E9")
points(eta[cl3],cmin[cl3],pch=16,cex=3,col="#009E73")
points(eta[1],cmin[1],pch=15,cex=3)
points(eta[length(eta)],ER_Exom[which.max(ER_Exom)],pch=17,cex=3)
dev.off()
i="SAS1"
GWAS=read.table(paste(i,".qassoc",sep=""))
setwd("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example_2/")
i="SAS1"
GWAS=read.table(paste(i,".qassoc",sep=""))
head(GWAS)
GWAS=read.table(paste(i,".qassoc",sep=""),header=T)
head(GWAS)
bim=read.table(paste(i,".bim",sep=""),header=F)
bim
sum(bim[,2]==GWAS[,2])
head(bim)
head(GWAS)
p2cor <- function(p, n, sign=rep(1, length(p))) {
stopifnot(length(n)==1 || length(n) == length(p))
stopifnot(length(p) == length(sign))
t <- sign(sign) * qt(p/2, df=n-2, lower.tail=F)
return(t / sqrt(n - 2 + t^2))
}
head(GWAS)
rst=cbind(bim[,1],bim[,4],bim[,5],bim[,6],sign(GWAS[,5]),GWAS[,4],GWAS[,9])
head(rst)
GWAS_rst=cbind(bim[,1],bim[,4],bim[,5],bim[,6],sign(GWAS[,5]),GWAS[,4],GWAS[,9])
GWAS_rst=cbind(bim[,1],bim[,4],bim[,5],bim[,6],sign(GWAS[,5]),GWAS[,4],GWAS[,9])
colnames(GWAS_rst)=c("CHR","BP","A1","A2","Sign","N","P")
head(GWAS_rst)
IProd_rst=cbind(bim[,1],bim[,4],bim[,5],bim[,6],p2cor(GWAS[,9],GWAS[,4],sign(GWAS[,5])))
head(IProd_rst)
IProd_rst[25,]
head(GWAS_rst)
GWAS=read.table(paste(i,".qassoc",sep=""),header=T)
bim=read.table(paste(i,".bim",sep=""),header=F)
print(sum(bim[,2]==GWAS[,2]))
GWAS_rst=data.frame(bim[,1],bim[,4],bim[,5],bim[,6],sign(GWAS[,5]),GWAS[,4],GWAS[,9])
colnames(GWAS_rst)=c("CHR","BP","A1","A2","Sign","N","P")
head(GWAS_rst)
IProd_rst=data.frame(bim[,1],bim[,4],bim[,5],bim[,6],p2cor(GWAS[,9],GWAS[,4],sign(GWAS[,5])))
IProd_rst[25,]
IProd_rst=data.frame(bim[,1],bim[,4],bim[,5],bim[,6],p2cor(GWAS[,9],GWAS[,4],sign(GWAS[,5])))
colnames(GWAS_rst)=c("CHR","BP","A1","A2","IProd")
GWAS=read.table(paste(i,".qassoc",sep=""),header=T)
bim=read.table(paste(i,".bim",sep=""),header=F)
print(sum(bim[,2]==GWAS[,2]))
GWAS_rst=data.frame(bim[,1],bim[,4],bim[,5],bim[,6],sign(GWAS[,5]),GWAS[,4],GWAS[,9])
colnames(GWAS_rst)=c("CHR","BP","A1","A2","Sign","N","P")
IProd_rst=data.frame(bim[,1],bim[,4],bim[,5],bim[,6],p2cor(GWAS[,9],GWAS[,4],sign(GWAS[,5])))
colnames(IProd_rst)=c("CHR","BP","A1","A2","IProd")
IProd_rst
IProd_rst[25,]
IProd_rst[24,]
IProd_rst[23,]
IProd_rst[20,]
IProd_rst[30,]
IProd_rst[27,]
IProd_rst[50,]
IProd_rst[49,]
IProd_rst[51,]
write.table(GWAS_rst,file=paste(i,".GWAS",sep=""),col.names = T,row.names = F,quote = F)
write.table(IProd_rst,file=paste(i,".IProd",sep=""),col.names = T,row.names = F,quote = F)
setwd("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example_2/")
p2cor <- function(p, n, sign=rep(1, length(p))) {
stopifnot(length(n)==1 || length(n) == length(p))
stopifnot(length(p) == length(sign))
t <- sign(sign) * qt(p/2, df=n-2, lower.tail=F)
return(t / sqrt(n - 2 + t^2))
}
for(i in c("SAS1","SAS2","EUR")){
GWAS=read.table(paste(i,".qassoc",sep=""),header=T)
bim=read.table(paste(i,".bim",sep=""),header=F)
print(sum(bim[,2]==GWAS[,2]))
GWAS_rst=data.frame(bim[,1],bim[,4],bim[,5],bim[,6],sign(GWAS[,5]),GWAS[,4],GWAS[,9])
colnames(GWAS_rst)=c("CHR","BP","A1","A2","Sign","N","P")
IProd_rst=data.frame(bim[,1],bim[,4],bim[,5],bim[,6],p2cor(GWAS[,9],GWAS[,4],sign(GWAS[,5])))
colnames(IProd_rst)=c("CHR","BP","A1","A2","IProd")
write.table(GWAS_rst,file=paste(i,".GWAS",sep=""),col.names = T,row.names = F,quote = F)
write.table(IProd_rst,file=paste(i,".IProd",sep=""),col.names = T,row.names = F,quote = F)
}
setwd("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/new_BRIGHT/BRIGHT/")
library(devtools)
library(pkgdown)
load_all()
Tind="GWAS"
Tss <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example2/SAS1.GWAS",header = T)
Tss <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example_2/SAS1.GWAS",header = T)
head(Tss)
Pind=c("GWAS")
Pss <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example_2/EUR.GWAS",header = T)
head(Pss)
Tref <- "~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/SAS1"
Pref <- "~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/EUR"
setwd("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/new_BRIGHT/BRIGHT/")
library(devtools)
library(pkgdown)
load_all()
Tind="GWAS"
Tss <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example_2/SAS1.GWAS",header = T)
head(Tss)
Pind=c("GWAS")
Pss <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example_2/EUR.GWAS",header = T)
head(Pss)
Tref <- "~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example_2/SAS1"
Pref <- "~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example_2/EUR"
setwd("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/new_BRIGHT/BRIGHT/")
library(devtools)
library(pkgdown)
load_all()
Tind="GWAS"
Tss <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example_2/SAS1.GWAS",header = T)
head(Tss)
Pind=c("GWAS")
Pss <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example_2/EUR.GWAS",header = T)
head(Pss)
Tref <- "~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example_2/SAS1"
Pref <- "~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example_2/EUR"
# read in reference panel
if(Tref%in%c("EUR","AFR","EAS","AMR","SAS")){
writeLines(strwrap(paste("Using ",Tref,"LD from 1000 genome project",sep="")))
KG=read.table(paste("inst/1000G/",Tref,"_1000G_2504.bim",sep=""))
KG[,2]=paste(KG[,1],KG[,4],KG[,5],KG[,6],sep="_")
LD_dir=paste("inst/1000G/",ref,"_1000G_2504.bed",sep="")
}else{
writeLines(strwrap("Using user specified LD"))
KG=read.table(paste(Tref,".bim",sep=""))
KG[,2]=paste(KG[,1],KG[,4],KG[,5],KG[,6],sep="_")
LD_dir=paste(Tref,".bed",sep="")
}
writeLines(strwrap(paste(length(Pind)," source of prior information identified",sep="")))
#QC
Tss=QC(Tss,Tind,KG,lab="target")
if(sum(is.na(Pind))){
rst=list()
writeLines(strwrap("No prior summary statistics detected"))
rst[["TLDblocks"]]=TLDblocks
rst[["PLDblocks"]]=PLDblocks
rst[["LD_dir"]]=LD_dir
rst[["Tss"]]=Tss
rst[["Tref"]]=Tref
rst[["KG"]]=KG
return(rst)
}
Pss=QC(Pss,Pind,KG,lab = "Prior")
Pdata=list()
Pdata[["Tss"]]=Pss
Pdata[["Tind"]]=Pind
Pdata[["TLDblocks"]]=PLDblocks
Prior_Lassosum=BRIGHTs(Pdata,m=NA,group=NA,m=NA,penalty=1,tau=0,eta=0,lambda=NA,nlambda=100,lambda.min=0.001,alpha=1, gamma=0,eps=0.0001,max_iter=1000000, dfmax=5000, gmax=5000, user=T)
Prior_Lassosum=BRIGHTs(Pdata,m=NA,group=NA,penalty=1,tau=0,eta=0,lambda=NA,nlambda=100,lambda.min=0.001,alpha=1, gamma=0,eps=0.0001,max_iter=1000000, dfmax=5000, gmax=5000, user=T)
Pdata=list()
Pdata[["Tss"]]=Pss
Pdata[["Tind"]]=Pind
Pdata[["TLDblocks"]]=PLDblocks
Pdata[["Tref"]]=Pref
head(Pss)
Prior_Lassosum=BRIGHTs(Pdata,m=NA,group=NA,penalty=1,tau=0,eta=0,lambda=NA,nlambda=100,lambda.min=0.001,alpha=1, gamma=0,eps=0.0001,max_iter=1000000, dfmax=5000, gmax=5000, user=T)
Pref
LD_dir
Pdata=list()
Pdata[["Tss"]]=Pss
Pdata[["Tind"]]=Pind
Pdata[["TLDblocks"]]=PLDblocks
Pdata[["Tref"]]=Pref
Pdata[["LD_dir"]]=paste(Pref,".bed",sep="")
PLDblocks="EUR"
Pdata=list()
Pdata[["Tss"]]=Pss
Pdata[["Tind"]]=Pind
Pdata[["TLDblocks"]]=PLDblocks
Pdata[["Tref"]]=Pref
Pdata[["LD_dir"]]=paste(Pref,".bed",sep="")
Prior_Lassosum=BRIGHTs(Pdata,m=NA,group=NA,penalty=1,tau=0,eta=0,lambda=NA,nlambda=100,lambda.min=0.001,alpha=1, gamma=0,eps=0.0001,max_iter=1000000, dfmax=5000, gmax=5000, user=T)
library(BEDMatrix)
Pdata=list()
Pdata[["Tss"]]=Pss
Pdata[["Tind"]]=Pind
Pdata[["TLDblocks"]]=PLDblocks
Pdata[["Tref"]]=Pref
Pdata[["LD_dir"]]=paste(Pref,".bed",sep="")
Prior_Lassosum=BRIGHTs(Pdata,m=NA,group=NA,penalty=1,tau=0,eta=0,lambda=NA,nlambda=100,lambda.min=0.001,alpha=1, gamma=0,eps=0.0001,max_iter=1000000, dfmax=5000, gmax=5000, user=T)
load_all()
Pdata=list()
Pdata[["Tss"]]=Pss
Pdata[["Tind"]]=Pind
Pdata[["TLDblocks"]]=PLDblocks
Pdata[["Tref"]]=Pref
Pdata[["LD_dir"]]=paste(Pref,".bed",sep="")
Prior_Lassosum=BRIGHTs(Pdata,m=NA,group=NA,penalty=1,tau=0,eta=0,lambda=NA,nlambda=100,lambda.min=0.001,alpha=1, gamma=0,eps=0.0001,max_iter=1000000, dfmax=5000, gmax=5000, user=T)
Prior_Lassosum$lambda
colSums(Prior_Lassosum$0!=0)
colSums(Prior_Lassosum[[as.character(0)]]!=0)
colSums(Prior_Lassosum[[as.character(0)]][(1:20)*25,]!=0)
build_site()
build_site()
build_site()
