}else if (ind=="IProd"){
check=c("CHR","BP","A1","A2","IProd")
if(sum(!check%in%colnames(ss))){
print(paste(check[!check%in%colnames(ss)]," column not found in ",lab," summary statistics",sep=""))
}
XtY=ss$IProd
outnm="IProd"
}else if (ind=="Coef"){
check=c("CHR","BP","A1","A2","Coef")
if(sum(!check%in%colnames(ss))){
print(paste(check[!check%in%colnames(ss)]," column not found in ",lab," summary statistics",sep=""))
}
XtY=ss$Coef
outnm="Coef"
}else{
stop('The data type indicator (Tind or Pind) need to be one of "GWAS", "IProd", or "Coef"')
}
head(KG)
# read in reference panel
if(Tref%in%c("EUR","AFR","EAS","AMR","SAS")){
writeLines(strwrap(paste("Using ",Tref,"LD from 1000 genome project",sep="")))
KG=read.table(paste("inst/1000G/",Tref,"_1000G_2504.bim",sep=""))
KG[,2]=paste(KG[,1],KG[,4],KG[,5],KG[,6],sep="_")
LD_dir=paste("inst/1000G/",ref,"_1000G_2504.bed",sep="")
}else{
writeLines(strwrap("Using user specified LD"))
KG=read.table(paste(Tref,".bim",sep=""))
KG[,2]=paste(KG[,1],KG[,4],KG[,5],KG[,6],sep="_")
LD_dir=paste(Tref,".bed",sep="")
}
writeLines(strwrap(paste(length(Pind)," source of prior information identified",sep="")))
head(KG)
match(c(1,2,3),c(2,1,3))
match(c(1,2,3),c(2,1,3,4))
match(c(1,2,3),c(2,1,4,3))
match(c(1,2,3,6),c(2,1,4,3))
c(1,2,3,4)[match(c(1,2,3,6),c(2,1,4,3))]
c(1,2,3,6)[match(c(1,2,3,6),c(2,1,4,3))]
a=c("a","b","c","d","e")
n=c(1,2,3,4,5)
b=c("d","c","a")
n[match(b,a)]
load_all()
getwd()
setwd("../Rewrite_Lassosum/new_BRIGHT/BRIGHT/")
load_all
load_all()
Tind="GWAS"
Tss <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/SAS1.GWAS",header = T)
head(Tss)
Pind=c("GWAS")
Pss <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/EUR.GWAS",header = T)
head(Pss)
Tref <- "~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/SAS1"
Pref <- "~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/EUR"
# read in reference panel
if(Tref%in%c("EUR","AFR","EAS","AMR","SAS")){
writeLines(strwrap(paste("Using ",Tref,"LD from 1000 genome project",sep="")))
KG=read.table(paste("inst/1000G/",Tref,"_1000G_2504.bim",sep=""))
KG[,2]=paste(KG[,1],KG[,4],KG[,5],KG[,6],sep="_")
LD_dir=paste("inst/1000G/",ref,"_1000G_2504.bed",sep="")
}else{
writeLines(strwrap("Using user specified LD"))
KG=read.table(paste(Tref,".bim",sep=""))
KG[,2]=paste(KG[,1],KG[,4],KG[,5],KG[,6],sep="_")
LD_dir=paste(Tref,".bed",sep="")
}
writeLines(strwrap(paste(length(Pind)," source of prior information identified",sep="")))
#QC
Tss=QC(Tss,Tind,KG)
ss=Tss
ind=Tind
KG
if(ind=="GWAS"){
check=c("CHR","BP","A1","A2","Sign","N","P")
if(sum(!check%in%colnames(ss))){
print(paste(check[!check%in%colnames(ss)]," column not found in ",lab," summary statistics",sep=""))
}
colnames(ss)
ss$P[ss$P==0]=10^-100
XtY=p2cor(ss$P,ss$N,ss$Sign)
outnm="IProd"
}else if (ind=="IProd"){
check=c("CHR","BP","A1","A2","IProd")
if(sum(!check%in%colnames(ss))){
print(paste(check[!check%in%colnames(ss)]," column not found in ",lab," summary statistics",sep=""))
}
XtY=ss$IProd
outnm="IProd"
}else if (ind=="Coef"){
check=c("CHR","BP","A1","A2","Coef")
if(sum(!check%in%colnames(ss))){
print(paste(check[!check%in%colnames(ss)]," column not found in ",lab," summary statistics",sep=""))
}
XtY=ss$Coef
outnm="Coef"
}else{
stop('The data type indicator (Tind or Pind) need to be one of "GWAS", "IProd", or "Coef"')
}
# remove NA
pos_na=is.na(XtY)
XtY=XtY[!pos_na]
ss=ss[!pos_na,]
# subset markers based on reference
nm=paste(ss$CHR,ss$BP,ss$A1,ss$A2,sep="_")
nm_flp=paste(ss$CHR,ss$BP,ss$A2,ss$A1,sep="_")
New_ss=cbind(KG[,2], KG[,1], KG[,4], KG[,5], KG[,6],0)
colnames(New_ss)=c("nm","CHR","BP","A1","A2",outnm)
pos=New_ss$nm%in%nm
load_all()
Tind="GWAS"
Tss <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/SAS1.GWAS",header = T)
head(Tss)
Pind=c("GWAS")
Pss <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/EUR.GWAS",header = T)
head(Pss)
Tref <- "~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/SAS1"
Pref <- "~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/EUR"
# read in reference panel
if(Tref%in%c("EUR","AFR","EAS","AMR","SAS")){
writeLines(strwrap(paste("Using ",Tref,"LD from 1000 genome project",sep="")))
KG=read.table(paste("inst/1000G/",Tref,"_1000G_2504.bim",sep=""))
KG[,2]=paste(KG[,1],KG[,4],KG[,5],KG[,6],sep="_")
LD_dir=paste("inst/1000G/",ref,"_1000G_2504.bed",sep="")
}else{
writeLines(strwrap("Using user specified LD"))
KG=read.table(paste(Tref,".bim",sep=""))
KG[,2]=paste(KG[,1],KG[,4],KG[,5],KG[,6],sep="_")
LD_dir=paste(Tref,".bed",sep="")
}
writeLines(strwrap(paste(length(Pind)," source of prior information identified",sep="")))
#QC
Tss=QC(Tss,Tind,KG)
writeLines(strwrap(paste(nrow(Tss)," SNPs passed filtering for target data",sep="")))
load
lload_all()
load_all()
Tind="GWAS"
Tss <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/SAS1.GWAS",header = T)
head(Tss)
Pind=c("GWAS")
Pss <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/EUR.GWAS",header = T)
head(Pss)
Tref <- "~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/SAS1"
Pref <- "~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/EUR"
# read in reference panel
if(Tref%in%c("EUR","AFR","EAS","AMR","SAS")){
writeLines(strwrap(paste("Using ",Tref,"LD from 1000 genome project",sep="")))
KG=read.table(paste("inst/1000G/",Tref,"_1000G_2504.bim",sep=""))
KG[,2]=paste(KG[,1],KG[,4],KG[,5],KG[,6],sep="_")
LD_dir=paste("inst/1000G/",ref,"_1000G_2504.bed",sep="")
}else{
writeLines(strwrap("Using user specified LD"))
KG=read.table(paste(Tref,".bim",sep=""))
KG[,2]=paste(KG[,1],KG[,4],KG[,5],KG[,6],sep="_")
LD_dir=paste(Tref,".bed",sep="")
}
writeLines(strwrap(paste(length(Pind)," source of prior information identified",sep="")))
#QC
Tss=QC(Tss,Tind,KG,lab="target")
load()
load_all()
Tind="GWAS"
Tss <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/SAS1.GWAS",header = T)
head(Tss)
Pind=c("GWAS")
Pss <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/EUR.GWAS",header = T)
head(Pss)
Tref <- "~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/SAS1"
Pref <- "~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/EUR"
# read in reference panel
if(Tref%in%c("EUR","AFR","EAS","AMR","SAS")){
writeLines(strwrap(paste("Using ",Tref,"LD from 1000 genome project",sep="")))
KG=read.table(paste("inst/1000G/",Tref,"_1000G_2504.bim",sep=""))
KG[,2]=paste(KG[,1],KG[,4],KG[,5],KG[,6],sep="_")
LD_dir=paste("inst/1000G/",ref,"_1000G_2504.bed",sep="")
}else{
writeLines(strwrap("Using user specified LD"))
KG=read.table(paste(Tref,".bim",sep=""))
KG[,2]=paste(KG[,1],KG[,4],KG[,5],KG[,6],sep="_")
LD_dir=paste(Tref,".bed",sep="")
}
writeLines(strwrap(paste(length(Pind)," source of prior information identified",sep="")))
QC(Tss,Tind,KG,lab="target")
a=QC(Tss,Tind,KG,lab="target")
KG[,2]
KG[999,2]="test"
a=QC(Tss,Tind,KG,lab="target")
length(a)
dim(a)
a[999,]
# read in reference panel
if(Tref%in%c("EUR","AFR","EAS","AMR","SAS")){
writeLines(strwrap(paste("Using ",Tref,"LD from 1000 genome project",sep="")))
KG=read.table(paste("inst/1000G/",Tref,"_1000G_2504.bim",sep=""))
KG[,2]=paste(KG[,1],KG[,4],KG[,5],KG[,6],sep="_")
LD_dir=paste("inst/1000G/",ref,"_1000G_2504.bed",sep="")
}else{
writeLines(strwrap("Using user specified LD"))
KG=read.table(paste(Tref,".bim",sep=""))
KG[,2]=paste(KG[,1],KG[,4],KG[,5],KG[,6],sep="_")
LD_dir=paste(Tref,".bed",sep="")
}
writeLines(strwrap(paste(length(Pind)," source of prior information identified",sep="")))
a=QC(Tss,Tind,KG,lab="target")
a[999,]
KG[999,2]=paste(KG[999,1],KG[999,4],KG[999,6],KG[999,5],sep="_")
a=QC(Tss,Tind,KG,lab="target")
a[999,]
ss=Tss
ind=Tind
if(ind=="GWAS"){
check=c("CHR","BP","A1","A2","Sign","N","P")
if(sum(!check%in%colnames(ss))){
print(paste(check[!check%in%colnames(ss)]," column not found in ",lab," summary statistics",sep=""))
}
colnames(ss)
ss$P[ss$P==0]=10^-100
XtY=p2cor(ss$P,ss$N,ss$Sign)
outnm="IProd"
}else if (ind=="IProd"){
check=c("CHR","BP","A1","A2","IProd")
if(sum(!check%in%colnames(ss))){
print(paste(check[!check%in%colnames(ss)]," column not found in ",lab," summary statistics",sep=""))
}
XtY=ss$IProd
outnm="IProd"
}else if (ind=="Coef"){
check=c("CHR","BP","A1","A2","Coef")
if(sum(!check%in%colnames(ss))){
print(paste(check[!check%in%colnames(ss)]," column not found in ",lab," summary statistics",sep=""))
}
XtY=ss$Coef
outnm="Coef"
}else{
stop('The data type indicator (Tind or Pind) need to be one of "GWAS", "IProd", or "Coef"')
}
#QC
Tss=QC(Tss,Tind,KG,lab="target")
paste("Prior",i)
i=1
paste("Prior",i)
Tind="GWAS"
Tss <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/SAS1.GWAS",header = T)
head(Tss)
Pind=c("GWAS")
Pss <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/EUR.GWAS",header = T)
head(Pss)
Tref <- "~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/SAS1"
Pref <- "~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/EUR"
# read in reference panel
if(Tref%in%c("EUR","AFR","EAS","AMR","SAS")){
writeLines(strwrap(paste("Using ",Tref,"LD from 1000 genome project",sep="")))
KG=read.table(paste("inst/1000G/",Tref,"_1000G_2504.bim",sep=""))
KG[,2]=paste(KG[,1],KG[,4],KG[,5],KG[,6],sep="_")
LD_dir=paste("inst/1000G/",ref,"_1000G_2504.bed",sep="")
}else{
writeLines(strwrap("Using user specified LD"))
KG=read.table(paste(Tref,".bim",sep=""))
KG[,2]=paste(KG[,1],KG[,4],KG[,5],KG[,6],sep="_")
LD_dir=paste(Tref,".bed",sep="")
}
writeLines(strwrap(paste(length(Pind)," source of prior information identified",sep="")))
#QC
Tss=QC(Tss,Tind,KG,lab="target")
if(is.data.frame(Pss)){
Pss=QC(Pss,Pind,KG,lab = "Prior")
writeLines(strwrap(paste(nrow(Pss)," SNPs passed filtering for prior data 1",sep="")))
#Prior_Lassosum=BRIGHTs(Tss=Pss,Tref=Pref,LDblocks="EUR",Pss=NA,m=NA,group=NA,m=NA,penalty=1,tau=0,eta=0,lambda=NA,nlambda=100,lambda.min=0.001,alpha=1, gamma=0,eps=0.0001,max_iter=1000000, dfmax=5000, gmax=5000, user=T)
}else if(is.list(Pss)){
for (i in 1:nrow(Pind)){
Pss[[i]]=QC(Pss[[i]],Pind[i],KG,lab = paste("Prior",i))
writeLines(strwrap(paste(nrow(Pss[[i]])," SNPs passed filtering for prior data ",i,sep="")))
}
}else {
stop("Pss must be either a data frame of one prior data or a list containing multiple prior data")
}
writeLines(strwrap("Using user specified LD"))
load_all()
Tind="GWAS"
Tss <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/SAS1.GWAS",header = T)
head(Tss)
Pind=c("GWAS")
Pss <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/EUR.GWAS",header = T)
head(Pss)
Tref <- "~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/SAS1"
Pref <- "~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/EUR"
load_all()
Tind="GWAS"
Tss <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/SAS1.GWAS",header = T)
head(Tss)
Pind=c("GWAS")
Pss <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/EUR.GWAS",header = T)
head(Pss)
Tref <- "~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/SAS1"
Pref <- "~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/EUR"
# read in reference panel
if(Tref%in%c("EUR","AFR","EAS","AMR","SAS")){
writeLines(strwrap(paste("Using ",Tref,"LD from 1000 genome project",sep="")))
KG=read.table(paste("inst/1000G/",Tref,"_1000G_2504.bim",sep=""))
KG[,2]=paste(KG[,1],KG[,4],KG[,5],KG[,6],sep="_")
LD_dir=paste("inst/1000G/",ref,"_1000G_2504.bed",sep="")
}else{
writeLines(strwrap("Using user specified LD"))
KG=read.table(paste(Tref,".bim",sep=""))
KG[,2]=paste(KG[,1],KG[,4],KG[,5],KG[,6],sep="_")
LD_dir=paste(Tref,".bed",sep="")
}
writeLines(strwrap(paste(length(Pind)," source of prior information identified",sep="")))
#QC
Tss=QC(Tss,Tind,KG,lab="target")
if(is.data.frame(Pss)){
Pss=QC(Pss,Pind,KG,lab = "Prior")
#Prior_Lassosum=BRIGHTs(Tss=Pss,Tref=Pref,LDblocks="EUR",Pss=NA,m=NA,group=NA,m=NA,penalty=1,tau=0,eta=0,lambda=NA,nlambda=100,lambda.min=0.001,alpha=1, gamma=0,eps=0.0001,max_iter=1000000, dfmax=5000, gmax=5000, user=T)
}else if(is.list(Pss)){
for (i in 1:nrow(Pind)){
Pss[[i]]=QC(Pss[[i]],Pind[i],KG,lab = paste("Prior",i))
}
}else {
stop("Pss must be either a data frame of one prior data or a list containing multiple prior data")
}
rst=list()
rst[["LD_dir"]]=LD_dir
rst[["Tss"]]=Tss
rst[["Pss"]]=Pss
rst[["Tref"]]=Tref
rst[["Pref"]]=Pref
rst[["KG"]]=KG
return(rst)
#' unordered groups and character vectors are also allowed.  If there are
#' coefficients to be included in the model without being penalized, assign
#' them to group 0 (or \code{"0"}).
#' @param m a vector of values representing multiplicative
#' factors by which each group's penalty is to be multiplied.  Often, this is a
#' function (such as the square root) of the number of predictors in each
#' group.  The default is to use the square root of group size for the group
#' selection methods, and a vector of 1's (i.e., no adjustment for group size)
#' for bi-level selection.
#' @return A list of preprocessed XtY and reference genotype matrix.
PreprocessS=function(Tss, Tind, Tref, Pss, Pind, Pref, LDblocks="EUR"){
# read in reference panel
if(Tref%in%c("EUR","AFR","EAS","AMR","SAS")){
writeLines(strwrap(paste("Using ",Tref,"LD from 1000 genome project",sep="")))
KG=read.table(paste("inst/1000G/",Tref,"_1000G_2504.bim",sep=""))
KG[,2]=paste(KG[,1],KG[,4],KG[,5],KG[,6],sep="_")
LD_dir=paste("inst/1000G/",ref,"_1000G_2504.bed",sep="")
}else{
writeLines(strwrap("Using user specified LD"))
KG=read.table(paste(Tref,".bim",sep=""))
KG[,2]=paste(KG[,1],KG[,4],KG[,5],KG[,6],sep="_")
LD_dir=paste(Tref,".bed",sep="")
}
writeLines(strwrap(paste(length(Pind)," source of prior information identified",sep="")))
#QC
Tss=QC(Tss,Tind,KG,lab="target")
if(is.data.frame(Pss)){
Pss=QC(Pss,Pind,KG,lab = "Prior")
#Prior_Lassosum=BRIGHTs(Tss=Pss,Tref=Pref,LDblocks="EUR",Pss=NA,m=NA,group=NA,m=NA,penalty=1,tau=0,eta=0,lambda=NA,nlambda=100,lambda.min=0.001,alpha=1, gamma=0,eps=0.0001,max_iter=1000000, dfmax=5000, gmax=5000, user=T)
}else if(is.list(Pss)){
for (i in 1:nrow(Pind)){
Pss[[i]]=QC(Pss[[i]],Pind[i],KG,lab = paste("Prior",i))
}
}else {
stop("Pss must be either a data frame of one prior data or a list containing multiple prior data")
}
rst=list()
rst[["LD_dir"]]=LD_dir
rst[["Tss"]]=Tss
rst[["Pss"]]=Pss
rst[["Tref"]]=Tref
rst[["Pref"]]=Pref
rst[["KG"]]=KG
return(rst)
}
Tind="GWAS"
Tss <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/SAS1.GWAS",header = T)
head(Tss)
Pind=c("GWAS")
Pss <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/EUR.GWAS",header = T)
head(Pss)
Tref <- "~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/SAS1"
Pref <- "~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/EUR"
PreprocessS(Tss, Tind, Tref, Pss, Pind, Pref, LDblocks="AFR")
Tind="GWAS"
Tss <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/SAS1.GWAS",header = T)
head(Tss)
Pind=c("GWAS")
Pss <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/EUR.GWAS",header = T)
head(Pss)
Tref <- "~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/SAS1"
Pref <- "~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/EUR"
dat=PreprocessS(Tss, Tind, Tref, Pss, Pind, Pref, LDblocks="AFR")
dat$sss
is.null(dat$sss)
names(dat)
Tind="GWAS"
Tss <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/SAS1.GWAS",header = T)
head(Tss)
Pind=c("GWAS")
Pss <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/EUR.GWAS",header = T)
head(Pss)
Tref <- "~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/SAS1"
Pref <- "~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/EUR"
dat=PreprocessS(Tss, Tind, Tref, Pss, Pind, Pref, LDblocks="AFR")
library(devtools)
library(pkgdown)
Tind="GWAS"
Tss <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/SAS1.GWAS",header = T)
head(Tss)
Pind=c("GWAS")
Pss <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/EUR.GWAS",header = T)
head(Pss)
Tref <- "~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/SAS1"
Pref <- "~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/EUR"
dat=PreprocessS(Tss, Tind, Tref, Pss, Pind, Pref, LDblocks="AFR")
load_all()
Tind="GWAS"
Tss <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/SAS1.GWAS",header = T)
head(Tss)
Pind=c("GWAS")
Pss <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/EUR.GWAS",header = T)
head(Pss)
Tref <- "~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/SAS1"
Pref <- "~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/EUR"
dat=PreprocessS(Tss, Tind, Tref, Pss, Pind, Pref, LDblocks="AFR")
out <- BRIGHTs(data = dat, type.trait="quantitative", penalty="LASSO")
Pss
# read in reference panel
if(Tref%in%c("EUR","AFR","EAS","AMR","SAS")){
writeLines(strwrap(paste("Using ",Tref,"LD from 1000 genome project",sep="")))
KG=read.table(paste("inst/1000G/",Tref,"_1000G_2504.bim",sep=""))
KG[,2]=paste(KG[,1],KG[,4],KG[,5],KG[,6],sep="_")
LD_dir=paste("inst/1000G/",ref,"_1000G_2504.bed",sep="")
}else{
writeLines(strwrap("Using user specified LD"))
KG=read.table(paste(Tref,".bim",sep=""))
KG[,2]=paste(KG[,1],KG[,4],KG[,5],KG[,6],sep="_")
LD_dir=paste(Tref,".bed",sep="")
}
writeLines(strwrap(paste(length(Pind)," source of prior information identified",sep="")))
#QC
Tss=QC(Tss,Tind,KG,lab="target")
if(is.na(Pss)){
rst[["LDblocks"]]=LDblocks
rst[["LD_dir"]]=LD_dir
rst[["Tss"]]=Tss
rst[["Tref"]]=Tref
rst[["KG"]]=KG
return(rst)
}
is.na(Pss)
Pss=list()
Pss["a"]=1
Pss["b"]=2
Pss
is.na(Pss)
sum(is.na(Pss))
Pss["c"]=NA
sum(is.na(Pss))
library(devtools)
library(pkgdown)
load_all()
Tind="GWAS"
Tss <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/SAS1.GWAS",header = T)
head(Tss)
Pind=c("GWAS")
Pss <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/EUR.GWAS",header = T)
head(Pss)
Tref <- "~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/SAS1"
Pref <- "~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/EUR"
dat=PreprocessS(Tss, Tind, Tref, Pss, Pind, Pref, LDblocks="AFR")
names(dat)
Pind
Tind
library(devtools)
library(pkgdown)
load_all()
Tind="GWAS"
Tss <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/SAS1.GWAS",header = T)
head(Tss)
Pind=c("GWAS")
Pss <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/EUR.GWAS",header = T)
head(Pss)
Tref <- "~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/SAS1"
Pref <- "~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/EUR"
dat=PreprocessS(Tss, Tind, Tref, LDblocks="AFR")
load_all()
dat=PreprocessS(Tss, Tind, Tref, LDblocks="AFR")
load_all()
Tind="GWAS"
Tss <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/SAS1.GWAS",header = T)
head(Tss)
Pind=c("GWAS")
Pss <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/EUR.GWAS",header = T)
head(Pss)
Tref <- "~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/SAS1"
Pref <- "~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/EUR"
dat=PreprocessS(Tss, Tind, Tref, Pss, Pind, Pref, LDblocks="AFR")
library(devtools)
library(pkgdown)
load_all()
Tind="GWAS"
Tss <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/SAS1.GWAS",header = T)
head(Tss)
Pind=c("GWAS")
Pss <- read.table("~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/EUR.GWAS",header = T)
head(Pss)
Tref <- "~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/SAS1"
Pref <- "~/Desktop/research/Kevin He/PRS/Rewrite_Lassosum/example/EUR"
dat=PreprocessS(Tss, Tind, Tref, Pss, Pind, Pref, LDblocks="AFR")
names(BRIGHTs)
names(dat)
